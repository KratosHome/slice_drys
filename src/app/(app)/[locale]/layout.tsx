import type { Metadata } from 'next'

import { Poppins, Rubik_Doodle_Shadow, DM_Sans } from 'next/font/google'

import { NextIntlClientProvider } from 'next-intl'
import { getMessages } from 'next-intl/server'
import { seedCategories } from '@/server/seed/category'

import Header from '@/components/client/header'
import { Toaster } from '@/components/admin/ui/toaster'
import Footer from '@/components/client/footer/footer'

import '../globals.css'

const poppins = Poppins({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-poppins',
  weight: ['400', '500', '600', '700', '800'],
})

const rubikDoodleShadow = Rubik_Doodle_Shadow({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-rubik-doodle-shadow',
  weight: ['400'],
})

const DMSans = DM_Sans({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-dm-sans',
  weight: ['400'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function LocaleLayout(props: {
  children: React.ReactNode
  params: Promise<{ locale: LanguageType }>
}) {
  const url = process.env.NEXT_URL
  const params = await props.params

  const { locale } = params
  const { children } = props

  const messages = await getMessages()

  const categoriesData = await fetch(`${url}/api/categories`, {
    next: { revalidate: 60 },
  }).then((res) => res.json())

  if (process.env.NODE_ENV === 'development') {
    await seedCategories()
  }

  return (
    <html
      lang={locale}
      className={`${poppins.variable} ${rubikDoodleShadow.variable} ${DMSans.variable}`}
    >
      <NextIntlClientProvider messages={messages}>
        <body className="flex min-h-svh flex-col">
          <Header productLinks={categoriesData.data} />
          <main className="flex-1">{children}</main>
          <Footer productLinks={categoriesData.data} />
          <Toaster />
        </body>
      </NextIntlClientProvider>
    </html>
  )
}
